[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "researchmind"
version = "0.1.0"
description = "智能科研助手 - 基于Google ADK的全流程科研支持系统"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "ResearchMind Team", email = "contact@researchmind.ai"},
]
maintainers = [
    {name = "ResearchMind Team", email = "contact@researchmind.ai"},
]
keywords = [
    "artificial intelligence",
    "research assistant", 
    "literature review",
    "materials science",
    "simulation",
    "experiment design",
    "google adk",
    "agent",
    "llm",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.9"
dependencies = [
    # Google Agent Developer Kit
    "google-adk>=1.0.0",
    
    # Model Context Protocol (MCP)
    "mcp>=1.0.0",
    "model-context-protocol>=1.0.0",
    
    # Core dependencies
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.8.0",
    "websockets>=11.0.0",
    
    # Scientific computing
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    
    # Machine Learning
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    
    # Materials Science
    "pymatgen>=2023.5.10",
    "ase>=3.22.0",
    "mattersim>=1.0.0",
    
    # Database and Storage
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "redis>=4.6.0",
    
    # Web scraping and APIs
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "arxiv>=1.4.0",
    "scholarly>=1.7.0",
    
    # Document processing
    "pypdf>=3.12.0",
    "python-docx>=0.8.11",
    "openpyxl>=3.1.0",
    
    # Async and concurrency
    "asyncio-mqtt>=0.13.0",
    "celery>=5.3.0",
    
    # Logging and monitoring
    "loguru>=0.7.0",
    "prometheus-client>=0.17.0",
    
    # Configuration
    "pyyaml>=6.0",
    "toml>=0.10.2",
    
    # Visualization and reporting
    "jinja2>=3.1.0",
    "weasyprint>=59.0",
    "markdown>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx-test>=0.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "jupyterlab>=4.0.0",
]
all = [
    "researchmind[dev,docs,jupyter]",
]

[project.scripts]
researchmind = "main_mcp:main"
researchmind-test = "test_agents:main"

[project.urls]
Homepage = "https://github.com/researchmind/researchmind"
Documentation = "https://researchmind.readthedocs.io/"
Repository = "https://github.com/researchmind/researchmind"
"Bug Reports" = "https://github.com/researchmind/researchmind/issues"
Changelog = "https://github.com/researchmind/researchmind/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["agents", "mcp_servers"]

[tool.hatch.build.targets.wheel.sources]
"agents" = "agents"
"mcp_servers" = "mcp_servers"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agents", "mcp_servers"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "google.*",
    "mcp.*",
    "pymatgen.*",
    "ase.*",
    "mattersim.*",
    "arxiv.*",
    "scholarly.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["agents", "mcp_servers"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
